<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
    	<groupId>org.springframework.boot</groupId>
    	<artifactId>spring-boot-starter-parent</artifactId>
    	<version>1.5.4.RELEASE</version>
	</parent>
	
	<artifactId>algen-web</artifactId>
	<groupId>it.red.algen</groupId>
	<name>Algen Spring Boot Application</name>
	<version>1.0.0-SNAPSHOT</version>


	 <properties>
   		<docker.image.prefix>algen</docker.image.prefix>
	    <file>readme</file>
	    <base>frolvlad/alpine-oraclejdk8:slim</base>
    	<!-- <docker.maven.plugin.version>0.21-SNAPSHOT</docker.maven.plugin.version> -->
	  </properties>
  
	<dependencies>
    	<dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-web</artifactId>
    	</dependency>
    	<dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-actuator</artifactId>
    	</dependency>
    	
    	<!-- RED Dependencies -->
    	<dependency>
        	<groupId>it.red.algen</groupId>
			<artifactId>algen-applications</artifactId>
  			<version>1.0.0-SNAPSHOT</version>
    	</dependency>
	</dependencies>
	
	   <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
	      <!--   <plugin>
	            <groupId>com.spotify</groupId>
	            <artifactId>docker-maven-plugin</artifactId>
	            <version>0.4.11</version>
	            <configuration>
	                <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
	                <dockerDirectory>src/main/docker</dockerDirectory>
	                <resources>
	                    <resource>
	                        <targetPath>/</targetPath>
	                        <directory>${project.build.directory}</directory>
	                        <include>${project.build.finalName}.jar</include>
	                    </resource>
	                </resources>
	            </configuration>
	        </plugin> -->
	        
	         <plugin>
		        <groupId>io.fabric8</groupId>
		        <artifactId>docker-maven-plugin</artifactId>
		        <extensions>true</extensions>

		          <!-- See:
		          https://github.com/fabric8io/docker-maven-plugin/tree/master/samples/dockerfile
		           -->
		        
		        <configuration>
                <verbose>true</verbose>
                <images>
                    <image>
                        <!-- Replace your-project-name -->
                        <name>algen</name>

                        <build>

                            <!-- This is the same FROM used in a Dockerfile -->
                            <from>frolvlad/alpine-oraclejdk8:slim</from>

                            <!-- This is the same ENTRYPOINT used in a Dockerfile -->
                            <entryPoint>
                                <exec>
                                    <arg>java</arg>
                                    <!-- This extra argument is so Tomcat can start faster due to lack of entropy -->
                                    <arg>-Djava.security.egd=file:/dev/./urandom</arg>
                                    <arg>-Dbasedir=/tmp</arg>
                                    <arg>-jar</arg>
                                    <!-- /maven/ is the default dir that the plugin copies your artifact to -->
                                    <arg>/maven/${project.artifactId}-${project.version}.${project.packaging}</arg>
                                </exec>
                            </entryPoint>

                            <assembly>
                                <!-- This is a predefined assembly.xml that will only copy your final artifact to the Docker image -->
                                <descriptorRef>artifact</descriptorRef>
                            </assembly>
                        </build>
                    </image>
                </images>
            </configuration>
		        
<!-- 		        <configuration>
		          <images>
		          
			            <image>
			              <name>algen</name>
			              <name>${docker.image.prefix}/${project.artifactId}</name>
			              <build>
			                <filter>@</filter>
			                <dockerFileDir>${project.basedir}/src/main/docker</dockerFileDir>
			                <assembly>
			                  <descriptorRef>artifact</descriptorRef>
			                </assembly>
			              </build>
			              <run>
			                <ports> 
			                  <port>4000:8080</port>
			                </ports>
			              </run>
			            </image>
		          </images>
		        </configuration> -->
		      </plugin>
	        
        </plugins>
    </build>
	
</project>
