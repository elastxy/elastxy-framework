<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	 <properties>
        
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        
	    <base>frolvlad/alpine-oraclejdk8:slim</base>
	    <tomcat.port>4000</tomcat.port>
	    <tomcat.ip>192.168.99.100</tomcat.ip>
	    <file>readme</file>
    	<!-- <docker.maven.plugin.version>0.21-SNAPSHOT</docker.maven.plugin.version> -->
    	
	  </properties>

    <parent>
        <groupId>org.elastxy</groupId>
        <artifactId>elastxy-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
    
	<artifactId>elastxy-web</artifactId>
	
	<name>ElastXY Web Application</name>
	<url>http://elastxy.io</url>


	<dependencies>
    	<dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-web</artifactId>
        	<!-- 
            <exclusions>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </exclusion>
            </exclusions>
             -->
    	</dependency>
    	
<!--     	<dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-cache</artifactId>
    	</dependency> -->
    	
    	<dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-actuator</artifactId>
    	</dependency>
    	
    	<!-- RED Dependencies -->
    	<dependency>
        	<groupId>org.elastxy</groupId>
			<artifactId>elastxy-applications</artifactId>
  			<version>1.0.0-SNAPSHOT</version>
    	</dependency>
    	
    	<dependency>
        	<groupId>org.elastxy</groupId>
			<artifactId>elastxy-distributed</artifactId>
  			<version>1.0.0-SNAPSHOT</version>
    	</dependency>
    	
    	
		<!-- SPARK -->
		<!-- TODOM: check transitive deps also in distributed! -->
    	
    	  <!-- Spark -->
   		<dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.11</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- fix java.lang.ClassNotFoundException: org.codehaus.commons.compiler.UncheckedCompileException -->
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>commons-compiler</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
        </dependency>
        
    	
    	
    	
    	<!-- Other Dependencies -->
		<dependency>
		    <groupId>com.github.ywilkof</groupId>
		    <artifactId>spark-jobs-rest-client</artifactId>
		    <version>1.3.6</version><!-- TODOA: move version to parent BOM -->
		</dependency>
		
		<dependency>
    		<groupId>io.springfox</groupId>
    		<artifactId>springfox-swagger2</artifactId>
		</dependency>
		
		<dependency>
    		<groupId>io.springfox</groupId>
    		<artifactId>springfox-swagger-ui</artifactId>
		</dependency>
    	
	</dependencies>
	
	
	   <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
	         <plugin>
		        <groupId>io.fabric8</groupId>
		        <artifactId>docker-maven-plugin</artifactId>
		        <extensions>true</extensions>
		        
 		        <configuration>
		          <images>
			            <image>
			              <name>elastxy/web</name>
			              <alias>elastxy/web</alias>
			              <build>
			                <filter>@</filter>
			                <dockerFileDir>${project.basedir}/src/main/docker</dockerFileDir>
			                <assembly>
			                  <descriptorRef>artifact</descriptorRef>
			                </assembly>
			              </build>
			              <run>
			              	<namingStrategy>alias</namingStrategy>
			                <ports> 
			                  <port>${tomcat.port}:8080</port>
			                </ports>
					         <wait> 
					           <http>
					              <url>http://${tomcat.ip}:${tomcat.port}/access</url>
					           </http>
					           <time>90000</time>
					         </wait>
			              </run>
			            </image>
		          </images>
		        </configuration>		        
		        
				  <!-- Connect start/stop to pre- and
				       post-integration-test phase, respectively if you want to start
				       your docker containers during integration tests -->
				  <!-- <executions>
				    <execution>
				       <id>start</id>
				       <phase>pre-integration-test</phase>
				       <goals>
				         "build" should be used to create the images with the
				              artifact
				         <goal>build</goal>
				         <goal>start</goal>
				       </goals>
				    </execution>
				    <execution>
				       <id>stop</id>
				       <phase>post-integration-test</phase>
				       <goals>
				         <goal>stop</goal>
				      </goals>
				    </execution>
				  </executions> -->
		        
		        <!--  ALTERNATIVE CONF
		        <configuration>
                <verbose>true</verbose>
                <images>
                    <image>
                        <name>elastxy</name>
                        <build>
                            <from>frolvlad/alpine-oraclejdk8:slim</from>
                            <entryPoint>
                                <exec>
                                    <arg>java</arg>
                                    <arg>-Djava.security.egd=file:/dev/./urandom</arg>
                                    <arg>-Ddatadir=/data</arg>
                                    <arg>-jar</arg>
                                    <arg>/maven/${project.artifactId}-${project.version}.${project.packaging}</arg>
                                </exec>
                            </entryPoint>

                            <assembly>
                                <descriptorRef>artifact</descriptorRef>
                            </assembly>
                        </build>
                    </image>
                </images>
            </configuration>
		     -->
		        
		      </plugin>

	      <!--   ALTERNATIVE PLUGIN
	      <plugin>
	            <groupId>com.spotify</groupId>
	            <artifactId>docker-maven-plugin</artifactId>
	            <version>0.4.11</version>
	            <configuration>
	                <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
	                <dockerDirectory>src/main/docker</dockerDirectory>
	                <resources>
	                    <resource>
	                        <targetPath>/</targetPath>
	                        <directory>${project.build.directory}</directory>
	                        <include>${project.build.finalName}.jar</include>
	                    </resource>
	                </resources>
	            </configuration>
	        </plugin> -->
	        
	        
        </plugins>
    </build>
	
	
	    			
	<profiles>
		<profile>
			<id>exclusions</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			
			   <build>
				   
			        <plugins>
			        	
				        <plugin>
						  <groupId>org.apache.maven.plugins</groupId>
						  <artifactId>maven-compiler-plugin</artifactId>
						  <configuration>
						    <excludes>
						      <exclude>**/legacy/**/*.java</exclude>
						    </excludes>
						  </configuration>
						  <executions>
						    <execution>
						      <id>default-testCompile</id>
						      <phase>test-compile</phase>
						      <configuration>
						        <testExcludes>
						          <exclude>**/legacy/**/*.java</exclude>
						        </testExcludes>
						      </configuration> 
						      <goals>
						        <goal>testCompile</goal>
						      </goals>
						    </execution>                  
						  </executions>
						</plugin>
					</plugins>
					
				</build>
  		</profile>
	</profiles>
	
</project>
